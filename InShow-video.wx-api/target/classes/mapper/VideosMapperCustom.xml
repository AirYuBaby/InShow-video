<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.InShowVideo.mapper.VideosMapperCustom">
  <resultMap id="BaseResultMap" type="com.InShowVideo.pojo.vo.VideosVO">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="audio_id" jdbcType="VARCHAR" property="audioId" />
    <result column="video_desc" jdbcType="VARCHAR" property="videoDesc" />
    <result column="video_path" jdbcType="VARCHAR" property="videoPath" />
    <result column="video_seconds" jdbcType="REAL" property="videoSeconds" />
    <result column="video_width" jdbcType="INTEGER" property="videoWidth" />
    <result column="video_height" jdbcType="INTEGER" property="videoHeight" />
    <result column="cover_path" jdbcType="VARCHAR" property="coverPath" />
    <result column="like_counts" jdbcType="BIGINT" property="likeCounts" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="click_counts" jdbcType="BIGINT" property="clickCounts" />
    <result column="avatarUrl" jdbcType="VARCHAR" property="avatarUrl"/>
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="topic_id" jdbcType="VARCHAR" property="topicId" />
    <result column="bgm_position" jdbcType="INTEGER" property="bgmPosition" />
   <result column="topicName" jdbcType="VARCHAR" property="topicName" />
  </resultMap>
  
  <select id="getAllvideos" resultMap ="BaseResultMap" parameterType="String">
  select v.*,u.avatarUrl as avatarUrl,u.nickname as nickname,t.topic_name as topicName from (videos v 
		left join users u on v.user_id = u.id) left join topics t on v.topic_id = t.id
		where 
			1=1 and v.status &lt; 3
			order by v.create_time desc
  </select>
  
  <select id="queryMyLikeVideos" resultMap ="BaseResultMap" parameterType="String">
  select v.*,u.avatarUrl as avatarUrl,u.nickname as nickname from videos v 
		left join users u on v.user_id = u.id
		where 
			v.id in (select ulv.video_id from users_like_videos ulv where ulv.user_id = #{userId})
			and v.status &lt; 3
			order by v.create_time desc
  </select>
  <select id="queryMyFollowerVideo" resultMap="BaseResultMap" parameterType="String">
  select v.*,u.avatarUrl as avatarUrl,u.nickname as nickname from videos v
  left join users u on v.user_id = u.id
  where 
			v.user_id in (select uf.user_id from users_fans uf where uf.fan_id = #{userId})
			and v.status &lt; 3
			order by v.create_time desc
  </select>
  <select id="getAllVideoInTopic" resultMap ="BaseResultMap" parameterType="String">
  select v.*,u.avatarUrl as avatarUrl,u.nickname as nickname,t.topic_name as topicName from (videos v 
		left join users u on v.user_id = u.id) left join topics t on v.topic_id = t.id
		where 
			1=1 and v.status &lt; 3 and v.topic_id=#{topicId}
			order by v.create_time desc
  </select>
  
  
  <update id="addlikecountsByvideo"  parameterType="String">
  	update videos set like_counts=like_counts+1 where id=#{videoId}
  </update>
  <update id="addClickcountsByvideo" parameterType="String">
    update videos set click_counts=click_counts+1 where id=#{videoId}
  </update>
  
  <update id="delectlikecountsByvideo"  parameterType="String">
  	update videos set like_counts=like_counts-1 where id=#{videoId}
  </update>
  <update id="delectClickcountsByvideo"  parameterType="String">
    update videos set click_counts=click_counts-1 where id=#{videoId}
  </update>
  <update id="changeVideoStatus"  parameterType="String">
    update videos set status=status+1 where id=#{videoId} 
  </update>
</mapper>